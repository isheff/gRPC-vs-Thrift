{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DataKinds #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}
-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module GRPCvsThrift.Proto.Bigstructure where
import qualified Prelude as Hs
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Wire as HsProtobuf
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.Monad as Hs
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.ByteString as Hs
import qualified Data.String as Hs (fromString)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Generics as Hs
import qualified GHC.Enum as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
 
data ProtoBigStructure request
     response = ProtoBigStructure{protoBigStructurePing ::
                                  request 'HsGRPC.Normal GRPCvsThrift.Proto.Bigstructure.Void
                                    GRPCvsThrift.Proto.Bigstructure.Void
                                    ->
                                    Hs.IO
                                      (response 'HsGRPC.Normal
                                         GRPCvsThrift.Proto.Bigstructure.Void),
                                  protoBigStructureBigStructureCall ::
                                  request 'HsGRPC.Normal
                                    GRPCvsThrift.Proto.Bigstructure.BigStructure
                                    GRPCvsThrift.Proto.Bigstructure.Void
                                    ->
                                    Hs.IO
                                      (response 'HsGRPC.Normal
                                         GRPCvsThrift.Proto.Bigstructure.Void)}
              deriving Hs.Generic
 
protoBigStructureServer ::
                          ProtoBigStructure HsGRPC.ServerRequest HsGRPC.ServerResponse ->
                            HsGRPC.ServiceOptions -> Hs.IO ()
protoBigStructureServer
  ProtoBigStructure{protoBigStructurePing = protoBigStructurePing,
                    protoBigStructureBigStructureCall =
                      protoBigStructureBigStructureCall}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName "/bigstructure.ProtoBigStructure/Ping")
                                   (HsGRPC.convertGeneratedServerHandler protoBigStructurePing)),
                                (HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/bigstructure.ProtoBigStructure/BigStructureCall")
                                   (HsGRPC.convertGeneratedServerHandler
                                      protoBigStructureBigStructureCall))],
                             HsGRPC.optClientStreamHandlers = [],
                             HsGRPC.optServerStreamHandlers = [],
                             HsGRPC.optBiDiStreamHandlers = [], optServerHost = serverHost,
                             optServerPort = serverPort, optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger})
 
protoBigStructureClient ::
                          HsGRPC.Client ->
                            Hs.IO (ProtoBigStructure HsGRPC.ClientRequest HsGRPC.ClientResult)
protoBigStructureClient client
  = (Hs.pure ProtoBigStructure) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName "/bigstructure.ProtoBigStructure/Ping")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/bigstructure.ProtoBigStructure/BigStructureCall")))
 
data BigStructure = BigStructure{bigStructureChildren ::
                                 Hs.Vector GRPCvsThrift.Proto.Bigstructure.BigStructure,
                                 bigStructureValueOneof :: Hs.Maybe BigStructureValueOneof}
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
 
instance HsProtobuf.Named BigStructure where
        nameOf _ = (Hs.fromString "BigStructure")
 
instance HsProtobuf.Message BigStructure where
        encodeMessage _
          BigStructure{bigStructureChildren = bigStructureChildren,
                       bigStructureValueOneof = bigStructureValueOneof}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                   (HsProtobuf.NestedVec bigStructureChildren)),
                case bigStructureValueOneof of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             BigStructureValueOneofI y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                                     (HsProtobuf.ForceEmit y))
                             BigStructureValueOneofB y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                                     (HsProtobuf.ForceEmit y))
                             BigStructureValueOneofS y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                                     (HsProtobuf.ForceEmit y))
                             BigStructureValueOneofY y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                                     (HsProtobuf.ForceEmit y))])
        decodeMessage _
          = (Hs.pure BigStructure) <*>
              ((Hs.pure HsProtobuf.nestedvec) <*>
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 9)))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 1),
                   (Hs.pure (Hs.Just Hs.. BigStructureValueOneofI)) <*>
                     HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 2),
                   (Hs.pure (Hs.Just Hs.. BigStructureValueOneofB)) <*>
                     HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 3),
                   (Hs.pure (Hs.Just Hs.. BigStructureValueOneofS)) <*>
                     HsProtobuf.decodeMessageField),
                  ((HsProtobuf.FieldNumber 4),
                   (Hs.pure (Hs.Just Hs.. BigStructureValueOneofY)) <*>
                     HsProtobuf.decodeMessageField)])
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 9)
                (HsProtobuf.Repeated
                   (HsProtobuf.Named (HsProtobuf.Single "BigStructure")))
                (HsProtobuf.Single "children")
                []
                Hs.Nothing)]
 
instance HsJSONPB.ToJSONPB BigStructure where
        toJSONPB (BigStructure f9 f1_or_f2_or_f3_or_f4)
          = (HsJSONPB.object
               ["children" .= f9,
                case f1_or_f2_or_f3_or_f4 of
                    Hs.Just (BigStructureValueOneofI f1) -> (HsJSONPB.pair "i" f1)
                    Hs.Just (BigStructureValueOneofB f2) -> (HsJSONPB.pair "b" f2)
                    Hs.Just (BigStructureValueOneofS f3) -> (HsJSONPB.pair "s" f3)
                    Hs.Just (BigStructureValueOneofY f4) -> (HsJSONPB.pair "y" f4)
                    Hs.Nothing -> Hs.mempty])
        toEncodingPB (BigStructure f9 f1_or_f2_or_f3_or_f4)
          = (HsJSONPB.pairs
               ["children" .= f9,
                case f1_or_f2_or_f3_or_f4 of
                    Hs.Just (BigStructureValueOneofI f1) -> (HsJSONPB.pair "i" f1)
                    Hs.Just (BigStructureValueOneofB f2) -> (HsJSONPB.pair "b" f2)
                    Hs.Just (BigStructureValueOneofS f3) -> (HsJSONPB.pair "s" f3)
                    Hs.Just (BigStructureValueOneofY f4) -> (HsJSONPB.pair "y" f4)
                    Hs.Nothing -> Hs.mempty])
 
instance HsJSONPB.FromJSONPB BigStructure where
        parseJSONPB
          = (HsJSONPB.withObject "BigStructure"
               (\ obj ->
                  (Hs.pure BigStructure) <*> obj .: "children" <*>
                    Hs.msum
                      [Hs.Just Hs.. BigStructureValueOneofI <$>
                         (HsJSONPB.parseField obj "i"),
                       Hs.Just Hs.. BigStructureValueOneofB <$>
                         (HsJSONPB.parseField obj "b"),
                       Hs.Just Hs.. BigStructureValueOneofS <$>
                         (HsJSONPB.parseField obj "s"),
                       Hs.Just Hs.. BigStructureValueOneofY <$>
                         (HsJSONPB.parseField obj "y"),
                       Hs.pure Hs.Nothing]))
 
instance HsJSONPB.ToJSON BigStructure where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON BigStructure where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema BigStructure where
        declareNamedSchema = HsJSONPB.genericDeclareNamedSchemaJSONPB
 
data BigStructureValueOneof = BigStructureValueOneofI Hs.Int64
                            | BigStructureValueOneofB Hs.Bool
                            | BigStructureValueOneofS Hs.Text
                            | BigStructureValueOneofY Hs.ByteString
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
 
instance HsProtobuf.Named BigStructureValueOneof where
        nameOf _ = (Hs.fromString "BigStructureValueOneof")
 
instance HsJSONPB.ToSchema BigStructureValueOneof where
        declareNamedSchema = HsJSONPB.genericDeclareNamedSchemaJSONPB
 
data Void = Void{}
          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
 
instance HsProtobuf.Named Void where
        nameOf _ = (Hs.fromString "Void")
 
instance HsProtobuf.Message Void where
        encodeMessage _ Void{} = (Hs.mconcat [])
        decodeMessage _ = (Hs.pure Void)
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB Void where
        toJSONPB (Void) = (HsJSONPB.object [])
        toEncodingPB (Void) = (HsJSONPB.pairs [])
 
instance HsJSONPB.FromJSONPB Void where
        parseJSONPB
          = (HsJSONPB.withObject "Void" (\ obj -> (Hs.pure Void)))
 
instance HsJSONPB.ToJSON Void where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Void where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema Void where
        declareNamedSchema = HsJSONPB.genericDeclareNamedSchemaJSONPB